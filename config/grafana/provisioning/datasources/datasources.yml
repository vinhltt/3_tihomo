apiVersion: 1

datasources:
  # Prometheus for Metrics
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: false
    uid: 'prometheus'
    editable: true
    jsonData:
      httpMethod: GET
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: 'tempo'
          urlDisplayLabel: 'View trace in Tempo'

  # Loki for Logs
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    isDefault: false
    uid: 'loki'
    editable: true
    jsonData:
      derivedFields:
        - datasourceUid: 'tempo'
          matcherRegex: "trace_id=(\\w+)"
          name: TraceID
          url: '$${__value.raw}'
          urlDisplayLabel: 'View trace in Tempo'

  # Grafana Tempo for Distributed Tracing
  - name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    isDefault: false
    uid: 'tempo'
    editable: true
    jsonData:
      # Traces to Logs correlation
      tracesToLogs:
        datasourceUid: 'loki'
        tags: ['correlation_id', 'correlation.id', 'trace_id']
        mappedTags: [
          { key: 'correlation_id', value: 'correlation_id' },
          { key: 'correlation.id', value: 'correlation_id' },
          { key: 'service.name', value: 'service_name' }
        ]
        mapTagNamesEnabled: true
        filterByTraceID: true
        filterBySpanID: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
      # Traces to Metrics correlation
      tracesToMetrics:
        datasourceUid: 'prometheus'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        queries:
          - name: 'Request Rate'
            query: 'rate(http_requests_total{service_name="$${__tag_service.name}"}[5m])'
          - name: 'Error Rate'
            query: 'rate(http_requests_total{service_name="$${__tag_service.name}",status_code=~"4.*|5.*"}[5m])'
          - name: 'Request Duration'
            query: 'histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{service_name="$${__tag_service.name}"}[5m]))'
        tags: [
          { key: 'service.name', value: 'service_name' },
          { key: 'http.method', value: 'method' },
          { key: 'http.status_code', value: 'status_code' }
        ]
      # Node Graph settings
      nodeGraph:
        enabled: true
      # Search settings  
      search:
        hide: false
      # Service Graph settings
      serviceMap:
        datasourceUid: 'prometheus'
      # Loki search settings
      lokiSearch:
        datasourceUid: 'loki'