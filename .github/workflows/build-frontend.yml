name: Build Frontend Image

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'src/fe/nuxt/**'
      - '.github/workflows/build-frontend.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'src/fe/nuxt/**'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild without cache'
        required: false
        default: false
        type: boolean

concurrency:
  group: build-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
      id-token: write
    
    outputs:
      image: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build.outputs.digest }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/frontend-nuxt
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=TiHoMo Frontend
            org.opencontainers.image.description=Nuxt 3 Frontend for TiHoMo Application
            org.opencontainers.image.vendor=TiHoMo Team
          annotations: |
            org.opencontainers.image.title=TiHoMo Frontend
            org.opencontainers.image.description=Nuxt 3 Frontend for TiHoMo Application

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./src/fe/nuxt
          file: ./src/fe/nuxt/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: |
            type=gha
            type=registry,ref=ghcr.io/${{ github.repository }}/frontend-nuxt:cache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=ghcr.io/${{ github.repository }}/frontend-nuxt:cache,mode=max
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            COMMIT_SHA=${{ github.sha }}
          no-cache: ${{ inputs.force_rebuild == true }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Generate build summary
        run: |
          echo "## 🚀 Frontend Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**📦 Image:** \`${{ fromJSON(steps.meta.outputs.json).tags[0] }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**🔄 Digest:** \`${{ steps.build.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**🏷️ Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**📝 Labels:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.labels }}' | sed 's/^/- `/' | sed 's/$/`/' >> $GITHUB_STEP_SUMMARY

      - name: Send Discord notification
        if: always() && secrets.DISCORD_WEBHOOK_URL != ''
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: |
            ${{ job.status == 'success' && '✅' || '❌' }} **Frontend Build ${{ job.status }}**
            
            **📊 Info:**
            • **Branch:** `${{ github.ref_name }}`
            • **Commit:** `${{ github.sha }}`
            • **Image:** `${{ fromJSON(steps.meta.outputs.json).tags[0] }}`
            • **Platforms:** `linux/amd64,linux/arm64`
            
            ${{ job.status == 'success' && '🚀 Ready for deployment!' || '🚨 Build failed - check logs' }}
