@{
    if (ViewContext.HttpContext.Request.IsHttps || ViewContext.HttpContext.Request.Host.Value.Contains("localhost"))
    {
        <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    }
    else
    {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"
                asp-fallback-src="~/lib/jquery-validation/dist/jquery.validate.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.validator"
                crossorigin="anonymous"
                integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04hbtA=="></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"
                asp-fallback-src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.validator && window.jQuery.validator.unobtrusive"
                crossorigin="anonymous"
                integrity="sha512-xq+Vm8jC94Yy1oBqn+Nckt7LG7SqIjulJXqFJRNmJ/HMB5uI+z3xYzN+QGSR5b/HGJaHtZFfWIaA1Mj9J2PLpQ=="></script>
    }
}

<script>
    // Custom validation styling for Bootstrap
    $.validator.setDefaults({
        errorClass: 'is-invalid',
        validClass: 'is-valid',
        errorElement: 'div',
        errorPlacement: function(error, element) {
            error.addClass('invalid-feedback');
            if (element.prop('type') === 'checkbox') {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        },
        highlight: function(element, errorClass, validClass) {
            $(element).addClass(errorClass).removeClass(validClass);
            $(element.form).find('label[for="' + element.id + '"]').addClass('text-danger');
        },
        unhighlight: function(element, errorClass, validClass) {
            $(element).removeClass(errorClass).addClass(validClass);
            $(element.form).find('label[for="' + element.id + '"]').removeClass('text-danger');
        }
    });

    // Password visibility toggle functionality
    $(document).ready(function() {
        $('.password-toggle').on('click', function() {
            const passwordField = $(this).siblings('input');
            const icon = $(this).find('i');
            
            if (passwordField.attr('type') === 'password') {
                passwordField.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
                $(this).attr('title', 'Hide password');
            } else {
                passwordField.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
                $(this).attr('title', 'Show password');
            }
        });

        // Custom password confirmation validation
        $('input[data-val-equalto]').on('keyup blur', function() {
            const confirmField = $(this);
            const passwordField = $(confirmField.data('val-equalto-other').replace('*.', '#'));
            
            if (confirmField.val() !== '' && passwordField.val() !== '') {
                if (confirmField.val() === passwordField.val()) {
                    confirmField.removeClass('is-invalid').addClass('is-valid');
                    confirmField.siblings('.invalid-feedback').hide();
                } else {
                    confirmField.removeClass('is-valid').addClass('is-invalid');
                    confirmField.siblings('.invalid-feedback').show();
                }
            }
        });

        // Real-time validation feedback
        $('form input').on('blur', function() {
            $(this).valid();
        });

        // Remove validation classes on focus
        $('form input').on('focus', function() {
            $(this).removeClass('is-invalid is-valid');
            $(this).siblings('.invalid-feedback').hide();
        });

        // Form submission with loading state
        $('form').on('submit', function() {
            const submitBtn = $(this).find('button[type="submit"]');
            const originalText = submitBtn.html();
            
            if ($(this).valid()) {
                submitBtn.prop('disabled', true);
                submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Please wait...');
                
                // Re-enable button after 10 seconds as fallback
                setTimeout(function() {
                    submitBtn.prop('disabled', false);
                    submitBtn.html(originalText);
                }, 10000);
            }
        });
    });

    // Additional utility functions for SSO
    window.SsoUtils = {
        // Copy text to clipboard
        copyToClipboard: function(text) {
            navigator.clipboard.writeText(text).then(function() {
                // Show toast or notification
                console.log('Copied to clipboard: ' + text);
            });
        },
        
        // Show loading overlay
        showLoading: function() {
            $('body').append('<div class="loading-overlay"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>');
        },
        
        // Hide loading overlay
        hideLoading: function() {
            $('.loading-overlay').remove();
        }
    };
</script>

<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .password-toggle {
        cursor: pointer;
        background: none;
        border: none;
        color: #6c757d;
        padding: 0.375rem 0.75rem;
    }

    .password-toggle:hover {
        color: #495057;
    }

    .is-invalid {
        border-color: #dc3545 !important;
    }

    .is-valid {
        border-color: #198754 !important;
    }

    .invalid-feedback {
        display: block !important;
    }

    /* Custom focus styles for better accessibility */
    .form-control:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .btn:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
</style>
