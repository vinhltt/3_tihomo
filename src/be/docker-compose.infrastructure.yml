version: '3.8'

# TiHoMo Infrastructure Services for Message Queue Testing
# Includes: RabbitMQ, PostgreSQL, Grafana, Loki, Prometheus
services:
  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: tihomo-rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: tihomo
      RABBITMQ_DEFAULT_PASS: tihomo123
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tihomo-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: tihomo-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: TiHoMo_Dev
      POSTGRES_USER: tihomo
      POSTGRES_PASSWORD: tihomo123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tihomo -d TiHoMo_Dev"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tihomo-network

  # Loki Log Aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: tihomo-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tihomo-network

  # Grafana Dashboards
  grafana:
    image: grafana/grafana:10.1.0
    container_name: tihomo-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tihomo-network

  # Prometheus Metrics
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: tihomo-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tihomo-network

volumes:
  rabbitmq_data:
    driver: local
  postgres_data:
    driver: local
  loki_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  tihomo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
